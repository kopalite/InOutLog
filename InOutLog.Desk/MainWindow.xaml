<Window
    x:Class="InOutLog.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:InOutLog.Core;assembly=InOutLog.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:InOutLog.Desk"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="{Binding Title}"
    Width="300"
    Height="255"
    ResizeMode="NoResize"
    WindowStartupLocation="CenterScreen"
    WindowStyle="SingleBorderWindow"
    mc:Ignorable="d">

    <Window.DataContext>
        <core:MainViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Path=InitCommand, Mode=OneWay}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <local:ClockConverter x:Key="ClockConverter" />
        <local:TimeSpanConverter x:Key="SpanConverter" />
        <local:VisibilityInverter x:Key="VisibilityInverter" />
        <BooleanToVisibilityConverter x:Key="VisibilityConverter" />

        <Style x:Key="TextClock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource Digital7}" />
            <Setter Property="FontSize" Value="26" />
            <Setter Property="Margin" Value="0,5,0,0" />
        </Style>
    </Window.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

        <!--  'Please wait' splash  -->

        <Grid
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="White"
            Visibility="{Binding IsInitialized, Converter={StaticResource VisibilityInverter}}">

            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Style="{StaticResource TextClock}"
                Text="Please wait..." />

        </Grid>

        <!--  Commands & Watchers  -->

        <Grid
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="White"
            Visibility="{Binding IsInitialized, Converter={StaticResource VisibilityConverter}}">

            <Grid.RowDefinitions>
                <!--  divider  -->
                <RowDefinition Height="10" />
                <!--  checkin  -->
                <RowDefinition Height="35" />
                <!--  checkout  -->
                <RowDefinition Height="35" />
                <!--  divider  -->
                <RowDefinition Height="10" />
                <!--  breakin  -->
                <RowDefinition Height="35" />
                <!--  breakout  -->
                <RowDefinition Height="35" />
                <!--  divider  -->
                <RowDefinition Height="10" />
                <!--  reset  -->
                <RowDefinition Height="35" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <!--  commands  -->
                <ColumnDefinition Width=".30*" />
                <!--  timings  -->
                <ColumnDefinition Width=".30*" />
                <!--  results  -->
                <ColumnDefinition Width=".30*" />
            </Grid.ColumnDefinitions>

            <!--  checkin  -->

            <Button
                Grid.Row="1"
                Grid.Column="0"
                Width="70"
                Height="30"
                Command="{Binding Watcher.CheckInCommand}">
                Check in
            </Button>
            <TextBlock
                Grid.Row="1"
                Grid.Column="1"
                Style="{StaticResource TextClock}"
                Text="{Binding Watcher.State.Data.StartedAt, Converter={StaticResource ClockConverter}}" />

            <!--  checkout  -->

            <Button
                Grid.Row="2"
                Grid.Column="0"
                Width="70"
                Height="30"
                Command="{Binding Watcher.CheckOutCommand}">
                Check out
            </Button>
            <TextBlock
                Grid.Row="2"
                Grid.Column="1"
                Style="{StaticResource TextClock}"
                Text="{Binding Watcher.State.Data.StoppedAt, Converter={StaticResource ClockConverter}}" />
            <TextBlock
                Grid.Row="2"
                Grid.Column="2"
                Style="{StaticResource TextClock}"
                Text="{Binding Watcher.State.Data.CheckInTime, Converter={StaticResource SpanConverter}}" />

            <!--  breakin  -->

            <Button
                Grid.Row="4"
                Grid.Column="0"
                Width="70"
                Height="30"
                Command="{Binding Watcher.BreakInCommand}">
                Break in
            </Button>
            <TextBlock
                Grid.Row="4"
                Grid.Column="1"
                Style="{StaticResource TextClock}"
                Text="{Binding Watcher.State.Data.BreakStartedAt, Converter={StaticResource ClockConverter}}" />

            <!--  breakout  -->

            <Button
                Grid.Row="5"
                Grid.Column="0"
                Width="70"
                Height="30"
                Command="{Binding Watcher.BreakOutCommand}">
                Break out
            </Button>
            <TextBlock
                Grid.Row="5"
                Grid.Column="1"
                Style="{StaticResource TextClock}"
                Text="{Binding Watcher.State.Data.BreakStoppedAt, Converter={StaticResource ClockConverter}}" />
            <TextBlock
                Grid.Row="5"
                Grid.Column="2"
                Style="{StaticResource TextClock}"
                Text="{Binding Watcher.State.Data.BreakInTime, Converter={StaticResource SpanConverter}}" />

            <!--  divider  -->

            <TextBlock
                Grid.Row="6"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="-------------------------------------" />

            <!--  reset  -->

            <Button
                Grid.Row="7"
                Grid.Column="0"
                Width="70"
                Height="30"
                Command="{Binding Watcher.ResetCommand}">
                Reset
            </Button>
            <TextBlock
                Grid.Row="7"
                Grid.Column="1"
                HorizontalAlignment="Center"
                Style="{StaticResource TextClock}"
                Text="TOTAL: " />
            <TextBlock
                Grid.Row="7"
                Grid.Column="2"
                Style="{StaticResource TextClock}"
                Text="{Binding Watcher.State.Data.WorkingTime, Converter={StaticResource SpanConverter}}" />


        </Grid>

    </Grid>

</Window>
